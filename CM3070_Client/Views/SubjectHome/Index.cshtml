@inject IConfiguration _configuration;

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div width="100%" class="px-5">
    
    <div class="container-fluid d-flex flex col-12 px-1 py-1" id='subjectHomeContainer'>
        <div class="col-2">
            <div class="card">
                <div class="card-body" >
                    <div id="homeTree"></div>
                </div>

            </div>
        </div>
        <div class="col-10 px-2">
            <div class="card">
                <div class="card-body">
                    <div class="card">
                        <div class="card-body" style="height: 20%">                            
                            <table id="homeListDetail" class="table table-hover table-bordered" width="100%" cellspacing="0">
                                <thead>
                                    <tr id="PendingHeadings"> </tr>
                                </thead>
                                <tbody></tbody>
                            </table>                       
                        </div>
                    </div>
                    <div class="card py-2">
                        <div class="card-body">
                            <div id="taskStatus"> </div>
                            <div class="d-flex flex-row"> 
                                
                                <label class="col-form-label"> Patient </label>
                                <label class="col-form-label" id="name"></label>
                                <label class="col-form-label" id="createdBy"></label>
                            </div>

                            <div class="d-flex flex-row">
                                <label class="col-form-label"> Due Date </label>
                                <label class="col-form-label" id="dueDate"></label>
                                <label class="col-form-label"> Priority </label>
                                <label class="col-form-label" id="priority"></label>
                            </div>
                            <label class="col-form-label"> Notes </label>
                            <textarea class="form-control" id="notes" rows="10"></textarea>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script type="text/javascript">
        var APIUrl = '@_configuration["App:APIUrl"]';

        console.log("Api", APIUrl);

        window.addEventListener("DOMContentLoaded", (event) => {

            console.log("Doc Loaded");
            GetHomeTree();
            GetHomeTask();
        })



        async function GetHomeTree() {

            const response = await fetch(APIUrl + "GetHomeTree", {
                method: 'GET',
                headers: new Headers({
                    "Content-Type": "application/x-www-form-urlencoded",
                })
            })
            .then(response => response.json())
            .then(response => {               

                LoadHomeTree(response, "#homeTree");

            })
        }

        async function GetHomeTask() {

            console.log("GetHomeTask");
            const response = await fetch(APIUrl + "GetHomeTask/" + 0, {
                method: 'GET',
                headers: new Headers({
                    "Content-Type": "application/x-www-form-urlencoded",
                })
            })
                .then(response => response.json())
                .then(response => {


                    loadHomeTask(response, document.getElementById("homeListDetail"));
                })
        }

        function loadHomeTask(data, table) {

            const tableHead = table.querySelector("thead");
            const tableBody = table.querySelector("tbody");

            
            console.log("ldTable", data)

            //clear table
            tableHead.innerHTML = "<tr></tr>"
            tableBody.innerHTML = "";

            tableHead.querySelector("tr").appendChild(createHeaders("ID", "ColId", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Name", "ColName", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Created Date", "ColCDate", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Due Date", "ColDDate", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Created By", "ColCBy", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Reason", "ColReason", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Priority", "ColPriority", ["tblColumn"]))
            tableHead.querySelector("tr").appendChild(createHeaders("Notes", "ColPriority", ["tblColumn"]))

            for (let i = 0; i < data.length; i++) {

                const rowElement = document.createElement("tr");

                rowElement.setAttribute("id", "Id" + data[i].id);
                //rowElement.classList.add("Row");
                rowElement.appendChild(createCell(data[i].id));
                rowElement.appendChild(createCell(data[i].demographic_no));
                rowElement.appendChild(createCell(data[i].created_date));
                rowElement.appendChild(createCell(data[i].due_date));
                rowElement.appendChild(createCell(data[i].created_by));
                rowElement.appendChild(createCell(data[i].reason));
                rowElement.appendChild(createCell(data[i].priority_id));
                rowElement.appendChild(createCell(data[i].notes));
                rowElement.appendChild(createButtonCellFunc("Load", "LoadTaskDetail(" + data[i].id + ")"));

                tableBody.appendChild(rowElement);
            }
        }

        async function LoadTaskDetail(id) {
            console.log("loadTaskDetail", id);

            console.log("GetHomeTask");
            const response = await fetch(APIUrl + "GetHomeTask/" + id , {
                method: 'GET',
                headers: new Headers({
                    "Content-Type": "application/x-www-form-urlencoded",
                })
            })
                .then(response => response.json())
                .then(response => {


                    loadHomeTaskDetail(response);
                })
        }

        function loadHomeTaskDetail(data) {

            console.log("taskDetail", data)

            SetDivElementText("name", data.demographic_no);
            SetDivElementText("createdBy", data.created_by);
            SetDivElementText("dueDate", data.due_date);
            SetDivElementText("priory", data.priority_id);
            SetDivElementText("notes", data.notes);

        }

        function LoadHomeTree(data, id) {

            console.log("TreeData", id, data);

            $(id).bstreeview({
                data: data,
                expandIcon: 'fa fa-angle-down fa-fw',
                collapseIcon: 'fa fa-angle-right fa-fw',
                indent: 1.25,
                parentsMarginLeft: '1.25rem',
                openNodeLinkOnNewTab: false
            });


        }
    </script>
}
